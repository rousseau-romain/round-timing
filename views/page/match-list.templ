package page

import (
	"fmt"
	"github.com/invopop/ctxi18n/i18n"
	"github.com/markbates/goth"
	"github.com/rousseau-romain/round-timing/model"
	"github.com/rousseau-romain/round-timing/shared/components"
	"time"
)

templ Match(m model.Match) {
	<tr>
		<td class="whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white">
			{ m.Name }
		</td>
		<td class="whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-200">{ m.CreatedAt }</td>
		<td class="whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-200">{ m.UpdatedAt }</td>
		<td class="whitespace-nowrap px-4 py-2">
			<a
				href={ templ.SafeURL("/match/" + fmt.Sprintf("%d", m.Id)) }
				class="inline-block rounded bg-indigo-600 px-4 py-2 text-xs font-medium text-white hover:bg-indigo-700"
			>
				{ i18n.T(ctx, "global.buttons.see") }
			</a>
		</td>
		<td class="whitespace-nowrap px-4 py-2">
			<button
				hx-delete={ "/match/" + fmt.Sprintf("%d", m.Id) }
				class="inline-block rounded bg-red-600 px-4 py-2 text-xs font-medium text-white hover:bg-red-700"
			>
				{ i18n.T(ctx, "global.buttons.delete") }
			</button>
		</td>
	</tr>
}

templ MatchTable(matchs []model.Match) {
	<div class="overflow-x-auto">
		<table
			class="min-w-full divide-y-2 divide-gray-200 bg-white text-sm dark:divide-gray-700 dark:bg-gray-900"
		>
			<thead class="ltr:text-left rtl:text-right">
				<tr>
					<th class="whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white">{ i18n.T(ctx, "global.table.name") }</th>
					<th class="whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white">
						{ i18n.T(ctx, "global.table.created-at") }
					</th>
					<th class="whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white">{ i18n.T(ctx, "global.table.updated-at") }</th>
					<th class="px-4 py-2"></th>
					<th class="px-4 py-2"></th>
				</tr>
			</thead>
			<tbody
				hx-swap="outerHTML swap:0.5s"
				hx-target="closest tr"
				class="divide-y divide-gray-200 dark:divide-gray-700"
			>
				for _, match := range matchs {
					@Match(match)
				}
			</tbody>
		</table>
	</div>
}

templ MatchListPage(userGoth goth.User, user model.User, errors components.Error, navItems []components.NavItem, languages []model.Language, modelUser model.User, matchs []model.Match) {
	@components.Layout(i18n.T(ctx, "page.match-list.title"), errors, userGoth, user, navItems, languages) {
		<div class="container mx-auto">
			<h1>{ i18n.T(ctx, "page.match-list.h1") }</h1>
			<form
				class="space-y-4"
				hx-post="/match"
				hx-swap="beforebegin"
				hx-target="next tbody"
				hx-target-error="#content"
			>
				<div>
					<label class="sr-only" for="name">{ i18n.T(ctx, "global.table.name") }</label>
					<input
						class="w-full rounded-lg border-gray-200 p-3 text-sm"
						placeholder={ i18n.T(ctx, "global.table.name") }
						required
						type="text"
						name="name"
						value={ i18n.T(ctx, "global.match") + " " + time.Now().Format("2006-01-02 15:04:05") }
					/>
				</div>
				<button
					type="submit"
					class="inline-block w-full rounded-lg bg-black px-5 py-3 font-medium text-white sm:w-auto"
				>
					{ i18n.T(ctx, "page.match-list.button-create-match") }
				</button>
			</form>
			@MatchTable(matchs)
		</div>
	}
}
