package page

import (
	"fmt"
	"github.com/invopop/ctxi18n/i18n"
	"github.com/markbates/goth"
	"github.com/rousseau-romain/round-timing/model"
	"github.com/rousseau-romain/round-timing/shared/components"
)

templ ProfilePage(userGoth goth.User, user model.User, errors components.Error, navItems []components.NavItem, languages []model.Language, pageSlug string, idUserShares []string, classes []model.Class, spells []model.SpellByClass) {
	@components.Layout(i18n.T(ctx, "page.profile.title"), errors, userGoth, user, navItems, languages, pageSlug) {
		<div class="container mx-auto">
			<h1 class="text-2xl font-semibold">{ i18n.T(ctx, "page.profile.h1") }</h1>
			<div class="mb-2">
				<div class="flex gap-2">
					<p class="text-gray-500">{ i18n.T(ctx, "page.profile.p-user-id") }</p>
					@components.ButtonCopy(user.IdShare)
				</div>
			</div>
			<h2 class="font-semibold">Utilisateurs spectateurs:</h2>
			<div class="mb-2">
				if len(idUserShares) == 0 {
					<p class="text-gray-500">{ i18n.T(ctx, "page.profile.no-spectate") }</p>
				}
				<form
					hx-post="/profile/user-spectate"
					hx-swap="afterbegin"
					hx-target="tbody"
					hx-target-error="#errors"
				>
					<input
						class="mb-2 w-1/2 block rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
						placeholder="id user example: 1"
						required
						type="text"
						name="idUserShare"
					/>
					<button
						type="submit"
						class="inline-block rounded-md bg-sky-600 px-5 py-2.5 text-sm font-medium text-white shadow hover:bg-sky-500"
					>
						Ajouter un spectateur
					</button>
				</form>
			</div>
			@TableUserSpectate(idUserShares)
			<h2 class="font-semibold mb-2">{ i18n.T(ctx, "page.profile.h2-spells-favorites") }</h2>
			<div class="mb-2 p-2">
				@ListSpellClass(classes, spells)
			</div>
			<a
				class="m-auto table rounded-md bg-red-600 px-6 py-3 text-md font-medium text-white shadow hover:bg-red-500"
				href={ templ.SafeURL("/auth/logout/" + userGoth.Provider) }
			>
				{ i18n.T(ctx, "page.profile.logout") }
			</a>
		</div>
	}
}

templ TableUserSpectate(idUserShares []string) {
	<table class="table-auto mb-2">
		<thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
			<tr>
				<th>id user spectate</th>
				<th></th>
			</tr>
		</thead>
		<tbody
			hx-swap="outerHTML"
			hx-target="closest tr"
		>
			for _, idUserShare := range(idUserShares) {
				@UserSpectate(idUserShare)
			}
		</tbody>
	</table>
}

templ UserSpectate(idUserShare string) {
	<tr>
		<td>{ idUserShare }</td>
		<td>
			<button
				class="inline-block rounded bg-red-600 px-4 py-2 text-xs font-medium text-white hover:bg-red-700"
				hx-delete="/profile/user-spectate"
				hx-vals={ fmt.Sprintf(`{"idUserShare": "%s"}`, idUserShare) }
			>
				Delete
			</button>
		</td>
	</tr>
}

templ ListSpellClass(classes []model.Class, spells []model.SpellByClass) {
	<div class="mb-4 flex gap-4 flex-col">
		for _, class := range(classes) {
			<div class="border p-2 flex flex-row items-center gap-4">
				<img
					class="h-auto w-8 img-class"
					alt={ class.Name }
					title={ class.Name }
					src={ class.UrlImage + "F.svg" }
				/>
				<div class="flex flex-row flex-wrap gap-2">
					for _, spell := range(spells) {
						if spell.IdClass == class.Id {
							@SpellFavorite(spell)
						}
					}
				</div>
			</div>
		}
	</div>
}

templ SpellFavorite(s model.SpellByClass) {
	<div
		class="group relative cursor-pointer transition-all hover:scale-110"
		hx-patch={ fmt.Sprintf("/profile/spell-favorite/%d/toggle-favorite", s.IdSpell) }
		hx-swap="outerHTML"
	>
		<img
			alt={ s.Name }
			src={ s.UrlImage }
			class="h-12 img-class"
		/>
		<div class="absolute -top-[7px] -left-[7px] cursor-pointer transition-all group-hover:scale-110">
			@components.SVGHeart(s.IsFavorite, "red", 20, 20)
		</div>
	</div>
}
